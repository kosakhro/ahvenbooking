
package bookings;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.List;

/**
 * @author Konsta Sakharovskiy 
 * @version Mar 8, 2019
 *
 */
public class RoomsBase implements Iterable<Room>  {

    private Collection<Room> rooms = new ArrayList<Room>();
    
       
    /**
     * @param args not in use
     */
    public static void main(String[] args) {
        
        RoomsBase rb = new RoomsBase();
        
        Room room1 = new Room();
        Room room2 = new Room();
        Room room3 = new Room();
        
        room1.register();
        room2.register();
        
        room1.assignRoom(101);
        room2.assignRoom(202);
        room3.assignRoom(101);
        
        rb.add(room1);
        rb.add(room2);
        rb.add(room3);
        
        List<Room> rooms2 = rb.giveRooms(101);
        
        for (Room rm : rooms2) {
            System.out.println("========================================");
            rm.printing(System.out);
        }
   
    }
    
    /**
     * initialize rooms base
     */
    public RoomsBase() {
        // access method
    }
    
    /**
     * add room to rooms list
     * @param rm room to add
     */
    public void add(Room rm) {
        rooms.add(rm);
    }
    
    /**
     * @return rooms quantity
     */
    public int getQnt() {
        return rooms.size();
    }
    
      

    @Override
    public Iterator<Room> iterator() {
        
        return rooms.iterator();
    }
    
    /**
     * Search and return rooms by reservation id
     * @param reservationNo reservation number
     * @return found rooms in list
     */
    public List<Room> giveRooms(int reservationNo) {
        List<Room> found = new ArrayList<Room>();
        for (Room rm : rooms)
            if (rm.getReservationNo() == reservationNo) found.add(rm);
        return found;
    }

}
