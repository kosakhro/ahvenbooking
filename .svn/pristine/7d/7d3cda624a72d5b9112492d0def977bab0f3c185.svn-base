package bookings;
// Generated by ComTest BEGIN
import java.io.File;
import java.util.Iterator;
import static org.junit.Assert.*;
import org.junit.*;
import bookings.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2019.03.21 21:17:40 // Generated by ComTest
 *
 */
public class ClientsBaseTest {



  // Generated by ComTest BEGIN
  /** 
   * testAdd82 
   * @throws Exception when error
   */
  @Test
  public void testAdd82() throws Exception {    // ClientsBase: 82
    ClientsBase clients = new ClientsBase(); 
    Client ronald = new Client(), george = new Client(); 
    assertEquals("From: ClientsBase line: 86", 0, clients.getQnt()); 
    clients.add(ronald); assertEquals("From: ClientsBase line: 87", 1, clients.getQnt()); 
    clients.add(george); assertEquals("From: ClientsBase line: 88", 2, clients.getQnt()); 
    clients.add(ronald); assertEquals("From: ClientsBase line: 89", 3, clients.getQnt()); 
    assertEquals("From: ClientsBase line: 90", ronald, clients.give(0)); 
    assertEquals("From: ClientsBase line: 91", george, clients.give(1)); 
    assertEquals("From: ClientsBase line: 92", ronald, clients.give(2)); 
    assertEquals("From: ClientsBase line: 93", false, clients.give(1) == ronald); 
    assertEquals("From: ClientsBase line: 94", true, clients.give(1) == george); 
    try {
    assertEquals("From: ClientsBase line: 95", ronald, clients.give(3)); 
    fail("ClientsBase: 95 Did not throw IndexOutOfBoundsException");
    } catch(IndexOutOfBoundsException _e_){ _e_.getMessage(); }
    clients.add(ronald); assertEquals("From: ClientsBase line: 96", 4, clients.getQnt()); 
    clients.add(ronald); assertEquals("From: ClientsBase line: 97", 5, clients.getQnt()); 
    clients.add(ronald); assertEquals("From: ClientsBase line: 98", 6, clients.getQnt()); 
    clients.add(ronald); assertEquals("From: ClientsBase line: 99", 7, clients.getQnt()); 
    clients.add(ronald); assertEquals("From: ClientsBase line: 100", 8, clients.getQnt()); 
    try {
    clients.add(ronald); 
    fail("ClientsBase: 101 Did not throw Exception");
    } catch(Exception _e_){ _e_.getMessage(); }
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testReadData165 
   * @throws Exception when error
   */
  @Test
  public void testReadData165() throws Exception {    // ClientsBase: 165
    ClientsBase clients = new ClientsBase(); 
    Client aku1 = new Client(), aku2 = new Client(); 
    aku1.autogenerateContent(); 
    aku2.autogenerateContent(); 
    String hakemisto = "testikelmit"; 
    String tiedNimi = hakemisto+"/nimet"; 
    File ftied = new File(tiedNimi+".dat"); 
    File dir = new File(hakemisto); 
    dir.mkdir(); 
    ftied.delete(); 
    try {
    clients.readData(tiedNimi); 
    fail("ClientsBase: 181 Did not throw Exception");
    } catch(Exception _e_){ _e_.getMessage(); }
    clients.add(aku1); 
    clients.add(aku2); 
    Iterator<Client> i = clients.iterator(); 
    assertEquals("From: ClientsBase line: 185", aku1, i.next()); 
    assertEquals("From: ClientsBase line: 186", aku2, i.next()); 
    assertEquals("From: ClientsBase line: 187", false, i.hasNext()); 
    clients.saveData(); 
    clients = new ClientsBase(); 
    clients.readData(tiedNimi); 
    Iterator<Client> u = clients.iterator(); 
    assertEquals("From: ClientsBase line: 193", aku1, u.next()); 
    assertEquals("From: ClientsBase line: 194", aku2, u.next()); 
    assertEquals("From: ClientsBase line: 195", false, u.hasNext()); 
    clients.add(aku2); 
    clients.saveData(); 
  } // Generated by ComTest END
}